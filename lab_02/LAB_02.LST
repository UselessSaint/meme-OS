Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-1


				.386p 
				
				descr struc    ; –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ–ø
				–∏—Å–∞–Ω–∏—è –¥–µ–∫—Å–∫—Ä–∏–ø—Ç–æ—Ä–∞ —Å–µ–≥–º–
				µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö 
				–¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤ GDT
 0000  0000				lim 		dw 0	
 0002  0000				base_l 	dw 0	
 0004  00				base_m 	db 0	
 0005  00				attr_1	db 0	
 0006  00				attr_2	db 0	
 0007  00				base_h 	db 0	
 0008				descr ends
				
				int_descr struc ; —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ–
				ø–∏—Å–∞–Ω–∏—è –¥–µ–∫—Å–∫—Ä–∏–ø—Ç–æ—Ä–∞ –ø—Ä–µ—Ä
				—ã–≤–∞–Ω–∏—è
 0000  0000				offs_l 	dw 0 	
 0002  0000				sel			dw 0	
 0004  00				counter db 0  
 0005  00				attr		db 0  
 0006  0000				offs_h 	dw 0  
 0008				int_descr ends
				
				; Protected mode
 0000				PM_seg	SEGMENT PARA PUBLIC 'CODE' USE32
						
					                ASSUME	CS:PM_seg
				
				    
 0000				  	GDT		label	byte
				
				  	
 0000  0000			  	gdt_null	descr <>
 0002  0000			
 0004  00			
 0005  00			
 0006  00			
 0007  00			
				
				
				  	; 32-–±–∏—Ç–Ω—ã–π 4-–≥–∏–≥–∞–±–∞–π—Ç–Ω—
				ã–π —Å–µ–≥–º–µ–Ω—Ç —Å –±–∞–∑–æ–π = 0
 0008  FFFF			  	gdt_flatDS	descr <0FFFFh,0,0,92h,1
				1001111b,0>
 000A  0000			
 000C  00			
 000D  92			
 000E  CF			
 000F  00			
				
					; 16-–±–∏—Ç–Ω—ã–π 64-–∫–∏–ª–æ–±–∞–π—Ç–Ω
				—ã–π —Å–µ–≥–º–µ–Ω—Ç –∫–æ–¥–∞ —Å –±–∞–∑–æ–π RM_s
				eg
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-2


 0010  7D01			  	gdt_16bitCS	descr <RM_seg_size-1,0,
				0,98h,0,0>
 0012  0000			
 0014  00			
 0015  98			
 0016  00			
 0017  00			
				
					; 32-–±–∏—Ç–Ω—ã–π 4-–≥–∏–≥–∞–±–∞–π—Ç–Ω—
				ã–π —Å–µ–≥–º–µ–Ω—Ç –∫–æ–¥–∞ —Å –±–∞–∑–æ–π PM_se
				g
 0018  3903			  	gdt_32bitCS	descr <PM_seg_size-1,0,
				0,98h,01000000b,0>
 001A  0000			
 001C  00			
 001D  98			
 001E  40			
 001F  00			
				
					; 32-–±–∏—Ç–Ω—ã–π 4-–≥–∏–≥–∞–±–∞–π—Ç–Ω—
				ã–π —Å–µ–≥–º–µ–Ω—Ç –¥–∞–Ω–Ω—ã—Ö —Å –±–∞–∑–æ–π P
				M_seg
 0020  3903			  	gdt_32bitDS	descr <PM_seg_size-1,0,
				0,92h,01000000b,0>
 0022  0000			
 0024  00			
 0025  92			
 0026  40			
 0027  00			
				
					; 32-–±–∏—Ç–Ω—ã–π 4-–≥–∏–≥–∞–±–∞–π—Ç–Ω—
				ã–π —Å–µ–≥–º–µ–Ω—Ç –¥–∞–Ω–Ω—ã—Ö —Å –±–∞–∑–æ–π s
				tack_seg
 0028  FF00			  	gdt_32bitSS	descr <stack_l-1,0,0, 9
				2h, 01000000b,0>
 002A  0000			
 002C  00			
 002D  92			
 002E  40			
 002F  00			
				
 = 0030				  	gdt_size = $-GDT
				
 0030  000000000000		  	gdtr	df 0	; –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è 
				—Ä–∞–∑–º–µ—Ä–∞ 6 –±–∞–π—Ç –∫–∞–∫ –†–µ–≥–∏—Å—Ç—Ä
				 –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –¥–µ—Å–∫—Ä
				–∏–ø—Ç–æ—Ä–æ–≤ GDTR
				    
					; –∏–º–µ–Ω–∞ –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–
				≤
 = 0008				    SEL_flatDS     equ   8
 = 0010				    SEL_16bitCS    equ   16
 = 0018				    SEL_32bitCS    equ   24
 = 0020				    SEL_32bitDS    equ   32
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-3


 = 0028				    SEL_32bitSS    equ   40
				
					; –¢–∞–±–ª–∏—Ü–∞ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ
				–≤ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π IDT
 0036				    IDT	label	byte
					; –ø–µ—Ä–≤—ã–µ 32 —ç–ª–µ–º–µ–Ω—Ç–∞ —Ç–∞
				–±–ª–∏—Ü—ã (–≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–µ –∏—Å–ø–æ
				–ª—å–∑—É—é—Ç—Å—è)
 0036  0020[			    int_descr 32 dup (<0, SEL_32bitCS,0, 8Eh, 0
				>)
	   0000			
	   1800			
	   00			
	   8E			
	   0000			
			 ]	
				
					; –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä –ø—Ä–µ—Ä—ã–≤–∞–Ω
				–∏—è –æ—Ç —Ç–∞–π–º–µ—Ä–∞
 0136  0000			    int08 int_descr <0, SEL_32bitCS,0, 8Eh, 0>
 0138  1800			
 013A  00			
 013B  8E			
 013C  0000			
				
					; –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä –ø—Ä–µ—Ä—ã–≤–∞–Ω
				–∏—è –æ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
 013E  0000			    int09 int_descr	<0, SEL_32bitCS,0, 8Eh,
				 0>
 0140  1800			
 0142  00			
 0143  8E			
 0144  0000			
				
				
 = 0110				    idt_size = $-IDT 
				
 0146  000000000000		    idtr	df 0 ; –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–
				∞–∑–º–µ—Ä–∞ 6 –±–∞–π—Ç –∫–∞–∫ –†–µ–≥–∏—Å—Ç—Ä —Ç
				–∞–±–ª–∏—Ü—ã –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤ –ø—Ä–µ—Ä—
				ã–≤–∞–Ω–∏–π IDTR
				
 014C  03FF 0000 0000		    idtr_real dw	3FFh,0,0 ; —Å–æ–¥–µ—Ä–∂
				–∏–º–æ–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞ IDTR –≤ —Ä–µ–∞–ª—å–Ω–
				æ–º —Ä–µ–∂–∏–º–µ
				
 0152  00			    master		db 0  ; –º–∞—Å–∫–∞ –ø—Ä
				–µ—Ä—ã–≤–∞–Ω–∏–π –≤–µ–¥—É—â–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–
				ª–ª–µ—Ä–∞				
					 
 0153  00			    slave		db 0  ; –≤–µ–¥–æ–º–æ–≥–
				æ					 
				
 0154  00			    escape		db 0  ; —Ñ–ª–∞–≥ - –ø–æ
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-4


				—Ä–∞ –≤—ã—Ö–æ–¥–∏—Ç—å –≤ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–
				∂–∏–º, –µ—Å–ª–∏ ==1			
 0155  00000000			    time_08		dd 0  ; —Å—á–µ—Ç—á–∏–∫ 
				–ø—Ä–æ—à–µ–¥—à–∏—Ö —Ç–∏–∫–æ–≤ —Ç–∞–π–º–µ—Ä–∞
						
				
 0159  49 6E 20 52 65 61			msg1 db 'In Real Mode now. To m
				ove to Protected Mode press any key.$'
       6C 20 4D 6F 64 65	
       20 6E 6F 77 2E 20	
       54 6F 20 6D 6F 76	
       65 20 74 6F 20 50	
       72 6F 74 65 63 74	
       65 64 20 4D 6F 64	
       65 20 70 72 65 73	
       73 20 61 6E 79 20	
       6B 65 79 2E 24		
 0194  49 6E 20 52 65 61			msg2 db 'In Real Mode again!$'
       6C 20 4D 6F 64 65	
       20 61 67 61 69 6E	
       21 24			
				
				
 01A8  00 00 31 32 33 34			ASCII_table	db 0, 0, 49, 50
				, 51, 52, 53, 54, 55, 56, 57, 48, 45, 61, 0, 0
       35 36 37 38 39 30	
       2D 3D 00 00		
 01B8  51 57 45 52 54 59						db 81, 
				87, 69, 82, 84, 89, 85, 73, 79, 80, 91, 93, 0, 
				0, 65, 83
       55 49 4F 50 5B 5D	
       00 00 41 53		
 01C8  44 46 47 48 4A 4B						db 68, 
				70, 71, 72, 74, 75, 76, 59, 39, 96, 0, 92, 90, 
				88, 67
       4C 3B 27 60 00 5C	
       5A 58 43			
 01D7  56 42 4E 4D 2C 2E						db 86, 
				66, 78, 77, 44, 46, 47
       2F			
 01DE  000001E0					out_position	dd 1E0h 
				
				
				
				
				print_str macro str
						mov ah,9
						mov dx, str
						int 21h
				endm
				
				
				create_number macro
						local number1
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-5


							cmp dl,10
							jl number1
							add dl,'A' - '0' - 10
						number1:
							add dl,'0'
				endm
				
				
				
				my_print_eax macro
						local prcyc1 		
						
							push ecx 	
							
							push dx
				
							mov ecx,8	
								
							add ebp,0B8040h 
							; 0B8000h - —Å–º–µ—â–µ–
				Ω–∏–µ –≤–∏–¥–µ–æ–±—É—Ñ—Ñ–µ—Ä–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ
				–ª—å–Ω–æ –Ω–∞—á–∞–ª–∞ —Å–µ–≥–º–µ–Ω—Ç–∞.
				
						prcyc1:
							mov dl,al	
							
							and dl,0Fh	
							
							create_number 0	
					
							mov es:[ebp],dl	
					
							ror eax,4	
								
									
									
						
							sub ebp,2	
								
							loop prcyc1	
							
				
							sub ebp,0B8010h	
					
							pop dx
							pop ecx
				endm
				
				
				; —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ 32-–±–∏—Ç–Ω—ã–π –∑–∞
				—â–∏—â–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º
 01E2				PM_entry:
 01E2  66| B8 0020				mov	ax,SEL_32bitDS
 01E6  66| 8E D8				mov	ds,ax
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-6


 01E9  66| B8 0008				mov	ax,SEL_flatDS
 01ED  66| 8E C0				mov	es,ax
 01F0  66| B8 0028				mov	ax,SEL_32bitSS
 01F4  BB 00000100 90				mov	ebx,stack_l
 01FA  66| 8E D0				mov	ss,ax
 01FD  8B E3					mov	esp,ebx
				
						; —Ä–∞–∑—Ä–µ—à–∏—Ç—å –ø—Ä–µ—Ä—ã
				–≤–∞–Ω–∏—è, –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ –
				µ—â—ë –≤ —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ
 01FF  FB					sti 
				
						;—Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—
				Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π –ø–∞–º—è—Ç–∏
 0200  E8 000002CA R				call	compute_memory
				
 0205				work:
 0205  2E: F6 05 00000154 R			test	escape, 1
       01			
 020D  74 F6					jz	work
				
 020F				goback:
 020F  FA					cli 
				
 0210  EA					db	0EAh 
 0211  0000011E R				dd	offset RM_return
 0215  0010					dw	SEL_16bitCS
				
				
					;–Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ
				—Ä—ã–≤–∞–Ω–∏—è –æ—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç–∞–π
				–º–µ—Ä–∞
 0217				new_int08:
 0217  50					push eax
 0218  55					push ebp
 0219  51					push ecx
 021A  66| 52					push dx
 021C  2E: A1 00000155 R			mov  eax,time_08
				
				
 0222  55					push ebp
 0223  BD 00000000				mov ebp, 0		
							
						my_print_eax 0		
					
 0228  51                    1				push ecx 
 0229  66| 52                1				push dx 
 022B  B9 00000008           1				mov ecx,8 
 0230  81 C5 000B8040        1				add ebp,0B8040h 
 0236                        1			??0000: 
 0236  8A D0                 1				mov dl,al 
 0238  80 E2 0F              1				and dl,0Fh 
 023B  80 FA 0A              2				cmp dl,10 
 023E  0F 8C 00000247 R      2				jl ??0001 
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-7


 0244  80 C2 07              2				add dl,'A' - '0' - 10 
 0247                        2			??0001: 
 0247  80 C2 30              2				add dl,'0' 
 024A  26: 88 55 00          1				mov es:[ebp],dl 
 024E  C1 C8 04              1				ror eax,4 
 0251  83 ED 02              1				sub ebp,2 
 0254  E2 E0                 1				loop ??0000 
 0256  81 ED 000B8010        1				sub ebp,0B8010h 
 025C  66| 5A                1				pop dx 
 025E  59                    1				pop ecx 
 025F  5D					pop ebp			
								
				
 0260  40					inc eax
 0261  2E: A3 00000155 R			mov time_08,eax
				
 0267  66| 5A					pop dx
 0269  59					pop ecx
 026A  5D					pop ebp
				
					
 026B  B0 20					mov	al,20h
 026D  E6 20					out	20h,al
 026F  58					pop eax
				
 0270  CF					iretd 
				
					; –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–
				µ—Ä—ã–≤–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∑–
				∞—â–∏—â–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞:
 0271				new_int09:
 0271  50						push eax
 0272  53						push ebx
 0273  55						push ebp
 0274  52						push edx
				
 0275  E4 60						in	al,60h 	
					 ; –ü–æ–ª—É—á–∞–µ–º —Å–∫–∞–Ω-–∫–æ–¥ –Ω–
				∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–∏ –∏–∑ –ø–æ—Ä—Ç–∞ –∫–ª
				–∞–≤–∏–∞—Ç—É—Ä—ã
				
 0277  3C 1C						cmp	al,1Ch 	     
 0279  0F 85 0000028C R					jne	not_leave 
					 
 027F  2E: C6 05 00000154 R				mov escape,1     
       01			
 0287  EB 32 90 90 90					jmp leav
 028C				not_leave:
 028C  3C 80						cmp al,80h 	; –°—Ä–
				∞–≤–Ω–∏–º –∫–∞–∫–æ–π —Å–∫–∞–Ω-–∫–æ–¥ –ø—Ä–∏—à–µ
				–ª: –Ω–∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–∏ –∏–ª–∏ –æ—Ç–∂
				–∞—Ç–æ–π?
 028E  0F 87 000002BB R					ja leav 	 
 0294  32 E4						xor ah,ah	 
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-8


 0296  66| 8B E8					mov bp,ax
 0299  2E: 8A 95 000001A8 R				mov dl,ASCII_table[ebp]
				 
 02A0  BD 000B8000					mov ebp,0B8000h
 02A5  2E: 8B 1D 000001DE R				mov ebx,out_position   
 02AC  26: 88 541D 00					mov es:[ebp+ebx],dl
				
 02B1  83 C3 02						add ebx,2	
						   
 02B4  2E: 89 1D 000001DE R				mov out_position,ebx
				
 02BB				leav:
							; –†–∞–∑—Ä–µ—à–∞–µ–º –æ
				–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–
				∞–ª—å—à–µ:
 02BB  E4 61						in	al,61h
 02BD  0C 80						or	al,80h
 02BF  E6 61						out	61h,al
				
 02C1  B0 20						mov	al,20h
 02C3  E6 20						out	20h,al
				
 02C5  5A						pop edx
 02C6  5D						pop ebp
 02C7  5B						pop ebx
 02C8  58						pop	eax
				
 02C9  CF						iretd
				
				
				
 02CA				compute_memory	proc
				
 02CA  1E					push	ds            
 02CB  66| B8 0008				mov	ax, SEL_flatDS	
 02CF  66| 8E D8				mov	ds, ax	; –∫–ª–∞–¥–µ–º 
				–≤ ds —Å–µ–≥–º–µ–Ω—Ç –Ω–∞ 4 –ì–ë - –≤—Å–µ –¥–æ—
				Å—Ç—É–ø–Ω–æ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –ê–ü
						
 02D2  BB 00100001				mov	ebx, 100001h ; –ø—Ä–æ–ø
				—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π –º–µ–≥–∞–±–∞–π—Ç —Å–µ
				–≥–º–µ–Ω—Ç–∞
 02D7  B2 AA					mov	dl,	10101010b
					 
				
 02D9  B9 FFEFFFFE				mov	ecx, 0FFEFFFFEh	
						; –≤ ECX –∫–ª–∞–¥—ë–º –∫–æ–ª–∏—
				á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–µ–π—Å—è –ø–∞–º—è—Ç–∏ (
				–¥–æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ –≤ 4–ì–ë
				) - —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ
				–Ω–∏—è
				
				
 02DE				check:
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-9


 02DE  8A 33					mov	dh, ds:[ebx]	; —Å–æ—
				Ö—Ä–∞–Ω—è–µ–º –≤ DH —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω
				–∏–µ –ø–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–º—É –±–∞–π—Ç—É –ø–∞–
				º—è—Ç–∏
 02E0  88 13					mov	ds:[ebx], dl	; –∫–ª–
				∞–¥—ë–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–∑
				–∞–¥–∞–Ω–Ω–æ–µ –≤—ã—à–µ DL) –≤ —ç—Ç–æ—Ç –±–∞–π—
				Ç	
 02E2  38 13					cmp	ds:[ebx], dl	; –ø—Ä–
				æ–≤–µ—Ä—è–µ–º - —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ–±—Ä–∞—Ç–Ω
				–æ —Ç–æ –∂–µ DL
 02E4  0F 85 000002EF R				jnz	end_of_memory	; –µ—Å–
				ª–∏ –Ω–µ—Ç - –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞ –ø–∞–º
				—è—Ç–∏
 02EA  88 33					mov	ds:[ebx], dh	; –∏–Ω–
				∞—á–µ –∫–ª–∞–¥–µ–º –æ–±—Ä–∞—Ç–Ω–æ —Ç–æ, —á—Ç–æ 
				—Ç–∞–º –±—ã–ª–æ
 02EC  43					inc	ebx		
									
 02ED  E2 EF					loop	check
 02EF				end_of_memory:
 02EF  1F					pop	ds		
									
 02F0  33 D2					xor	edx, edx
 02F2  8B C3					mov	eax, ebx	; –≤ EB
				X –ª–µ–∂–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—á–∏—Ç–
				∞–Ω–Ω–æ–π –ø–∞–º—è—Ç–∏ –≤ –±–∞–π—Ç–∞—Ö; –∫–ª–∞–
				¥—ë–º –µ–≥–æ –≤ EAX,			
 02F4  BB 00100000				mov	ebx, 100000h ; –¥–µ–ª–∏
				–º –Ω–∞ 1 –ú–±, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–
				µ–∑—É–ª—å—Ç–∞—Ç –≤ –º–µ–≥–∞–±–∞–π—Ç–∞—Ö	
					
 02F9  F7 F3					div	ebx
				
 02FB  55					push ebp
 02FC  BD 00000014				mov ebp,20		
							
						my_print_eax 0		
					
 0301  51                    1				push ecx 
 0302  66| 52                1				push dx 
 0304  B9 00000008           1				mov ecx,8 
 0309  81 C5 000B8040        1				add ebp,0B8040h 
 030F                        1			??0002: 
 030F  8A D0                 1				mov dl,al 
 0311  80 E2 0F              1				and dl,0Fh 
 0314  80 FA 0A              2				cmp dl,10 
 0317  0F 8C 00000320 R      2				jl ??0003 
 031D  80 C2 07              2				add dl,'A' - '0' - 10 
 0320                        2			??0003: 
 0320  80 C2 30              2				add dl,'0' 
 0323  26: 88 55 00          1				mov es:[ebp],dl 
 0327  C1 C8 04              1				ror eax,4 
 032A  83 ED 02              1				sub ebp,2 
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-10


 032D  E2 E0                 1				loop ??0002 
 032F  81 ED 000B8010        1				sub ebp,0B8010h 
 0335  66| 5A                1				pop dx 
 0337  59                    1				pop ecx 
 0338  5D					pop ebp			
								
				
 0339  C3					ret
 033A					compute_memory	endp
				
				
 = 033A					PM_seg_size = $-GDT
 033A				PM_seg	ENDS
				
 0000				stack_seg	SEGMENT  PARA STACK 'STACK'
 0000  0100[				stack_start	db	100h dup(?)
	   ??			
			 ]	
				
 = 0100					stack_l = $-stack_start	
 0100				stack_seg 	ENDS
				
				
				
				
				; Real Mode
 0000				RM_seg	SEGMENT PARA PUBLIC 'CODE' USE16
						
					ASSUME CS:RM_seg, DS:PM_seg, SS:stack_s
				eg
				
 0000				start:
				
 0000  B8 ---- R				mov   ax,PM_seg
 0003  8E D8					mov   ds,ax
				
 0005  B4 09					mov ah, 09h
 0007  66| BA 0159 R				mov edx, offset msg1
 000D  CD 21					int 21h
				
 000F  66| 50					push eax
 0011  B4 10					mov ah,10h
 0013  CD 16					int 16h
 0015  66| 58					pop eax
				
 0017  B8 0003					mov	ax,3
 001A  CD 10					int	10h
				
 001C  68 ---- R				push PM_seg
 001F  1F					pop ds
				
 0020  66| 33 C0				xor	eax,eax
 0023  B8 ---- R				mov	ax,RM_seg
 0026  66| C1 E0 04				shl	eax,4		
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-11


 002A  67| A3 00000012 R			mov	word ptr gdt_16bitCS.ba
				se_l,ax
 0030  66| C1 E8 10				shr	eax,16
 0034  67| A2 00000014 R			mov	byte ptr gdt_16bitCS.ba
				se_m,al
 003A  B8 ---- R				mov	ax,PM_seg
 003D  66| C1 E0 04				shl	eax,4
 0041  66| 50					push eax		
 0043  66| 50					push eax		
 0045  67| A3 0000001A R			mov	word ptr GDT_32bitCS.ba
				se_l,ax
 004B  67| A3 0000002A R			mov	word ptr GDT_32bitSS.ba
				se_l,ax
 0051  67| A3 00000022 R			mov	word ptr GDT_32bitDS.ba
				se_l,ax
 0057  66| C1 E8 10				shr	eax,16
 005B  67| A2 0000001C R			mov	byte ptr GDT_32bitCS.ba
				se_m,al
 0061  67| A2 0000002C R			mov	byte ptr GDT_32bitSS.ba
				se_m,al
 0067  67| A2 00000024 R			mov	byte ptr GDT_32bitDS.ba
				se_m,al
				
						; –≤—ã—á–∏—Å–ª–∏–º –ª–∏–Ω–µ–π–Ω
				—ã–π –∞–¥—Ä–µ—Å GDT
 006D  66| 58					pop eax
 006F  66| 05 0000 R				add	eax,offset GDT 	
									
 0075  67| 66| A3 00000032 R			mov	dword ptr gdtr+2,eax
							
 007C  67| C7 05 00000030 R			mov word ptr gdtr, gdt_size-1
					
       002F			
 0085  67| 0F 01 15 00000030			lgdt	fword ptr gdtr
	R			
				
						; –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –≤—ã—á–∏
				—Å–ª–∏–º –ª–∏–Ω–µ–π–Ω—ã–π –∞–¥—Ä–µ—Å IDT
 008D  66| 58					pop	eax
 008F  66| 05 0036 R				add	eax,offset IDT
 0095  67| 66| A3 00000148 R			mov	dword ptr idtr+2,eax
 009C  67| C7 05 00000146 R			mov word ptr idtr, idt_size-1
       010F			
				
						; –ó–∞–ø–æ–ª–Ω–∏–º —Å–º–µ—â–µ–Ω
				–∏–µ –≤ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–∞—Ö –ø—Ä–µ—Ä—ã–≤–∞
				–Ω–∏–π
 00A5  66| B8 0217 R				mov	eax, offset new_int08 
 00AB  67| A3 00000136 R			mov	int08.offs_l, ax
 00B1  66| C1 E8 10				shr	eax, 16
 00B5  67| A3 0000013C R			mov	int08.offs_h, ax
 00BB  66| B8 0271 R				mov	eax, offset new_int09 
 00C1  67| A3 0000013E R			mov	int09.offs_l, ax
 00C7  66| C1 E8 10				shr	eax, 16
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-12


 00CB  67| A3 00000144 R			mov	int09.offs_h, ax
				
						; —Å–æ—Ö—Ä–∞–Ω–∏–º –º–∞—Å–∫–∏ –
				ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
 00D1  E4 21					in	al, 21h		
									
 00D3  67| A2 00000152 R			mov	master, al	
								
 00D9  E4 A1					in	al, 0A1h	
									
 00DB  67| A2 00000153 R			mov	slave, al
				
 00E1  B0 11					mov	al, 11h		
									
 00E3  E6 20					out	20h, al		
									
 00E5  B0 20					mov	AL, 20h		
									
 00E7  E6 21					out	21h, al		
									
 00E9  B0 04					mov	al, 4		
									
					
				
 00EB  E6 21					out	21h, al
 00ED  B0 01					mov	al, 1		
									  
 00EF  E6 21					out	21h, al
				
						; –ó–∞–ø—Ä–µ—Ç–∏–º –≤—Å–µ –ø—Ä–
				µ—Ä—ã–≤–∞–Ω–∏—è –≤ –≤–µ–¥—É—â–µ–º –∫–æ–Ω—Ç—Ä–æ–
				ª–ª–µ—Ä–µ, –∫—Ä–æ–º–µ IRQ0 (—Ç–∞–π–º–µ—Ä) –∏ IR
				Q1(–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)
 00F1  B0 FC					mov	al, 0FCh
 00F3  E6 21					out	21h, al
				
						;–∑–∞–ø—Ä–µ—Ç–∏–º –≤—Å–µ –ø—Ä–µ
				—Ä—ã–≤–∞–Ω–∏—è –≤ –≤–µ–¥–æ–º–æ–º –∫–æ–Ω—Ç—Ä–æ–ª
				–ª–µ—Ä–µ
 00F5  B0 FF					mov	al, 0FFh
 00F7  E6 A1					out	0A1h, al
				
 00F9  67| 0F 01 1D 00000146			lidt	fword ptr idtr
	R			
				
 0101  E4 92					in	al,92h		
								
 0103  0C 02					or	al,2		
									
 0105  E6 92					out	92h,al		
							
				
 0107  FA					cli
						; –∑–∞–ø—Ä–µ—â–∞–µ–º –Ω–µ–º–∞—Å
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-13


				–∫–∏—Ä—É–µ–º—ã–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0108  E4 70					in	al,70h
 010A  0C 80					or	al,80h
 010C  E6 70					out	70h,al
				
 010E  0F 20 C0					mov	eax,cr0
 0111  0C 01					or	al,1
 0113  0F 22 C0					mov	cr0,eax
				
 0116  66					db	66h
 0117  EA					db	0EAh
 0118  000001E2 R				dd	offset PM_entry
 011C  0018					dw	SEL_32bitCS
				
 011E				RM_return:
 011E  0F 20 C0					mov	eax,cr0
 0121  24 FE					and	al,0FEh 	
							
 0123  0F 22 C0					mov	cr0,eax
				
				
 0126  EA					db	0EAh		
								
 0127  012B R					dw	$+4		
									
 0129  ---- R					dw	RM_seg
				
 012B  B8 ---- R				mov	ax,PM_seg	
						
 012E  8E D8					mov	ds,ax
 0130  8E C0					mov	es,ax
 0132  B8 ---- R				mov	ax,stack_seg
 0135  BB 0100					mov	bx,stack_l
 0138  8E D0					mov	ss,ax
 013A  8B E3					mov	sp,bx
				
						; –ø–µ—Ä–µ–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—
				É–µ–º –≤–µ–¥—É—â–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –æ–±—
				Ä–∞—Ç–Ω–æ 
 013C  B0 11					mov	al, 11h		
						
 013E  E6 20					out	20h, al
 0140  B0 08					mov	al, 8		
							
 0142  E6 21					out	21h, al
 0144  B0 04					mov	al, 4		
								
 0146  E6 21					out	21h, al
 0148  B0 01					mov	al, 1
 014A  E6 21					out	21h, al
				
 014C  67| A0 00000152 R			mov	al, master
 0152  E6 21					out	21h, al
 0154  67| A0 00000153 R			mov	al, slave
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Page     1-14


 015A  E6 A1					out	0A1h, al
				
 015C  67| 0F 01 1D 0000014C			lidt	fword ptr idtr_real
	R			
				
						; —Ä–∞–∑—Ä–µ—à–∞–µ–º –Ω–µ–º–∞—Å
				–∫–∏—Ä—É–µ–º—ã–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0164  E4 70					in	al,70h
 0166  24 7F					and	al,07FH
 0168  E6 70					out	70h,al
				
 016A  FB					sti
				
 016B  B8 0003					mov	ax,3
 016E  CD 10					int	10h
				
 0170  B4 09					mov ah, 09h
 0172  66| BA 0194 R				mov edx, offset msg2
 0178  CD 21					int 21h
				
				
 017A  B4 4C					mov	ah,4Ch
 017C  CD 21					int	21h
				
 = 017E				RM_seg_size = $-start 	
 017E				RM_seg	ENDS
				END start

Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Symbols-1


Macros:

		N a m e			Lines

CREATE_NUMBER  . . . . . . . . .  	   5
MY_PRINT_EAX . . . . . . . . . .  	  16
PRINT_STR  . . . . . . . . . . .  	   3

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

DESCR  . . . . . . . . . . . . .  	0008	0006
  LIM  . . . . . . . . . . . . .  	0000
  BASE_L . . . . . . . . . . . .  	0002
  BASE_M . . . . . . . . . . . .  	0004
  ATTR_1 . . . . . . . . . . . .  	0005
  ATTR_2 . . . . . . . . . . . .  	0006
  BASE_H . . . . . . . . . . . .  	0007
INT_DESCR  . . . . . . . . . . .  	0008	0005
  OFFS_L . . . . . . . . . . . .  	0000
  SEL  . . . . . . . . . . . . .  	0002
  COUNTER  . . . . . . . . . . .  	0004
  ATTR . . . . . . . . . . . . .  	0005
  OFFS_H . . . . . . . . . . . .  	0006

Segments and Groups:

                N a m e         	Size	Length	 Align	Combine Class

PM_SEG . . . . . . . . . . . . .  	32 Bit	033A	PARA	PUBLIC	'CODE'
RM_SEG . . . . . . . . . . . . .  	16 Bit	017E	PARA	PUBLIC	'CODE'
STACK_SEG  . . . . . . . . . . .  	32 Bit	0100	PARA	STACK	'STACK'

Symbols:            

                N a m e         	Type	 Value	 Attr

ASCII_TABLE  . . . . . . . . . .  	L BYTE	01A8	PM_SEG

CHECK  . . . . . . . . . . . . .  	L NEAR	02DE	PM_SEG
COMPUTE_MEMORY . . . . . . . . .  	N PROC	02CA	PM_SEG	Length = 0070

END_OF_MEMORY  . . . . . . . . .  	L NEAR	02EF	PM_SEG
ESCAPE . . . . . . . . . . . . .  	L BYTE	0154	PM_SEG

GDT  . . . . . . . . . . . . . .  	L BYTE	0000	PM_SEG
GDTR . . . . . . . . . . . . . .  	L FWORD	0030	PM_SEG
GDT_16BITCS  . . . . . . . . . .  	L QWORD	0010	PM_SEG
GDT_32BITCS  . . . . . . . . . .  	L QWORD	0018	PM_SEG
GDT_32BITDS  . . . . . . . . . .  	L QWORD	0020	PM_SEG
GDT_32BITSS  . . . . . . . . . .  	L QWORD	0028	PM_SEG
GDT_FLATDS . . . . . . . . . . .  	L QWORD	0008	PM_SEG
Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Symbols-2


GDT_NULL . . . . . . . . . . . .  	L QWORD	0000	PM_SEG
GDT_SIZE . . . . . . . . . . . .  	NUMBER	0030	
GOBACK . . . . . . . . . . . . .  	L NEAR	020F	PM_SEG

IDT  . . . . . . . . . . . . . .  	L BYTE	0036	PM_SEG
IDTR . . . . . . . . . . . . . .  	L FWORD	0146	PM_SEG
IDTR_REAL  . . . . . . . . . . .  	L WORD	014C	PM_SEG
IDT_SIZE . . . . . . . . . . . .  	NUMBER	0110	
INT08  . . . . . . . . . . . . .  	L QWORD	0136	PM_SEG
INT09  . . . . . . . . . . . . .  	L QWORD	013E	PM_SEG

LEAV . . . . . . . . . . . . . .  	L NEAR	02BB	PM_SEG

MASTER . . . . . . . . . . . . .  	L BYTE	0152	PM_SEG
MSG1 . . . . . . . . . . . . . .  	L BYTE	0159	PM_SEG
MSG2 . . . . . . . . . . . . . .  	L BYTE	0194	PM_SEG

NEW_INT08  . . . . . . . . . . .  	L NEAR	0217	PM_SEG
NEW_INT09  . . . . . . . . . . .  	L NEAR	0271	PM_SEG
NOT_LEAVE  . . . . . . . . . . .  	L NEAR	028C	PM_SEG

OUT_POSITION . . . . . . . . . .  	L DWORD	01DE	PM_SEG

PM_ENTRY . . . . . . . . . . . .  	L NEAR	01E2	PM_SEG
PM_SEG_SIZE  . . . . . . . . . .  	NUMBER	033A	

RM_RETURN  . . . . . . . . . . .  	L NEAR	011E	RM_SEG
RM_SEG_SIZE  . . . . . . . . . .  	NUMBER	017E	

SEL_16BITCS  . . . . . . . . . .  	NUMBER	0010	
SEL_32BITCS  . . . . . . . . . .  	NUMBER	0018	
SEL_32BITDS  . . . . . . . . . .  	NUMBER	0020	
SEL_32BITSS  . . . . . . . . . .  	NUMBER	0028	
SEL_FLATDS . . . . . . . . . . .  	NUMBER	0008	
SLAVE  . . . . . . . . . . . . .  	L BYTE	0153	PM_SEG
STACK_L  . . . . . . . . . . . .  	NUMBER	0100	
STACK_START  . . . . . . . . . .  	L BYTE	0000	STACK_SEG	Length = 0100
START  . . . . . . . . . . . . .  	L NEAR	0000	RM_SEG

TIME_08  . . . . . . . . . . . .  	L DWORD	0155	PM_SEG

WORK . . . . . . . . . . . . . .  	L NEAR	0205	PM_SEG

??0000 . . . . . . . . . . . . .  	L NEAR	0236	PM_SEG
??0001 . . . . . . . . . . . . .  	L NEAR	0247	PM_SEG
??0002 . . . . . . . . . . . . .  	L NEAR	030F	PM_SEG
??0003 . . . . . . . . . . . . .  	L NEAR	0320	PM_SEG
@CPU . . . . . . . . . . . . . .  	TEXT  3471		
@FILENAME  . . . . . . . . . . .  	TEXT  lab_02		
@VERSION . . . . . . . . . . . .  	TEXT  510		

Microsoft (R) Macro Assembler Version 5.10                  11/7/19 01:01:05
                                                             Symbols-3



    441 Source  Lines
    483 Total   Lines
     74 Symbols

  47834 + 434849 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
